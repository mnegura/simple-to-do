$green-strong: #5dc2af;
$green-light: #bddad5;
$grey-strong: #c6c6c6;
$grey-medium: #a3a3a3;
$grey-light: #aeaeae;
$slight-grey: #e5e5e5;
$white: #fff;

$unit-size: 0.625rem;

html {
  overflow-x: hidden;
}

.main-container {
  align-items: center;
  background: #f8fafe;
  display: flex;
  flex-direction: column;
  height: fit-content;
  min-height: 100vh;
  justify-content: center;
  width: 100vw;
}

.error-msg {
  align-items: center;
  background-color: #e84b7a;
  color: #fff;
  display: flex;
  font-size: 1rem;
  line-height: 1.5rem;
  max-width: 12.5rem;
  padding: 0.5rem 1rem;
  position: fixed;
  right: 3rem;
  top: 1.5rem;

  .button {
    margin-left: 1rem;
    
    &::before,
    &::after {
      background: #fff;
    }
  }
}

.loading-txt {
  color: $grey-light;
  display: block;
  margin: auto;
  margin-bottom: 1rem;
  text-align: center;
  width: 100%;
}

// Checkbox
.checkbox {
  &__wrapper {
    cursor: pointer;
    display: block;
    padding-left: $unit-size * 3;
    position: relative;

    .checkbox--show::after {
      border: solid $green-strong;
      border-width: 0 $unit-size / 5 $unit-size / 5 0;
      height: 1rem;
      left: 0.7rem;
      top: $unit-size / 2;
      transform: rotate(45deg);
      width: $unit-size / 2;
    }
  }

  &--hidden {
    display: none;

    &:checked ~ .checkbox--show::after {
      display: block;
    }
  }

  &--show {
    border: $unit-size / 10 solid $slight-grey;
    border-radius: 50%;
    box-sizing: border-box;
    height: $unit-size * 3;
    left: 0;
    position: absolute;
    top: 0;
    width: $unit-size * 3;

    &:hover {
      border: $unit-size / 10 solid $green-light;
    }

    &::after {
      content: "";
      display: none;
      position: absolute;
    }
  }

  &--primary {
    &:checked ~ .checkbox--show {
      background: $white;
      border: $unit-size / 10 solid $green-light;
    }

    &:disabled ~ .checkbox--show {
      background: $white;
      cursor: not-allowed;
    }

    &:checked:disabled ~ .checkbox--show {
      cursor: not-allowed;
      opacity: 0.6;
    }
  }
}

// todo-container
.todo {
  background: $white;
  border: $unit-size / 10 solid rgba(0, 0, 0, 0.17);
  border-radius: 0.75rem;
  box-sizing: border-box;
  height: auto;
  margin-bottom: 10rem;
  margin-top: 10rem;
  width: 36.8125rem;

  &__checkbox {
    align-items: center;
    display: flex;
    justify-content: center;
    margin-bottom: 0;
    margin-right: 0.5rem;
    max-width: 80%;
    min-height: $unit-size * 3;

    .todo__task-txt {
      margin-left: 0.375rem;
    }
  }

  &__task-txt {
    -webkit-box-orient: vertical;
    display: -webkit-box;
    font-family: Roboto;
    font-size: 1rem;
    font-style: normal;
    font-weight: 100;
    -webkit-line-clamp: 2;
    line-height: $unit-size * 2;
    overflow: hidden;

    &--checked {
      color: $grey-light;
      text-decoration-line: line-through;
    }
  }

  &__time-txt {
    color: #5e5e5e;
    font-family: Roboto;
    font-size: $unit-size;
    font-style: normal;
    font-weight: 100;
    margin-left: 0.5rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  &__result {
    align-items: center;
    border-top: $unit-size / 10 solid $grey-strong;
    display: flex;
    justify-content: space-between;
    padding: 1rem 1.125rem 1rem 1.25rem;

    &-task-row {
      align-items: center;
      display: flex;
      width: 80%;
    }

    &:hover {
      .button--hidden {
        visibility: visible;
      }
    }
  }

  &__form {
    align-items: center;
    display: flex;
    justify-content: space-between;
    min-height: 3.625rem;
    padding-left: 3 * $unit-size;
    padding-right: 1.375rem;
  }

  &__input {
    border: none;
    font-family: Roboto;
    font-size: 1rem;
    font-style: normal;
    font-weight: 400;
    line-height: 1.1875rem;

    &:focus {
      outline: none;
    }

    &::placeholder {
      color: $grey-light;
    }
  }
}

// button
.button {
  background: none;
  border: none;
  height: 1rem;
  outline: none;
  width: 1rem;

  &--hidden {
    visibility: hidden;
  }

  &:hover {
    cursor: pointer;
  }

  &--state-add {
    position: relative;

    &:hover {
      &::before,
      &::after {
        background: $green-strong;
      }
    }

    &::before,
    &::after {
      background: $grey-medium;
      content: "";
      height: $unit-size / 10;
      left: 0;
      position: absolute;
      width: 0.9375rem;
    }

    &::after {
      transform: rotate(-90deg);
    }
  }

  &--state-remove {
    @extend .button--state-add;

    transform: rotate(45deg);

    &::before,
    &::after {
      top: 0.5rem;
    }
  }
}
